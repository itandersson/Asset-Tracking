// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mini_Project_2.Model;

namespace Mini_Project_2.Migrations
{
    [DbContext(typeof(AssetsContext))]
    [Migration("20220602124413_setAssetID")]
    partial class setAssetID
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mini_Project_2.Asset.Assets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("office")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<DateTime>("purchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Asset");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Assets");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.Asus", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("Asus");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.HP", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("HP");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.Iphone", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("Iphone");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.Lenovo", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("Lenovo");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.MacBook", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("MacBook");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.Motorola", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("Motorola");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.Nokia", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("Nokia");
                });

            modelBuilder.Entity("Mini_Project_2.Asset.Samsung", b =>
                {
                    b.HasBaseType("Mini_Project_2.Asset.Assets");

                    b.HasDiscriminator().HasValue("Samsung");
                });
#pragma warning restore 612, 618
        }
    }
}
